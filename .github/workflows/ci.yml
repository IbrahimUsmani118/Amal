# ...existing code...
name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Run type checking
        run: npx tsc --noEmit

      - name: Build check (Expo static export)
        run: npx expo export --platform web --clear || true

  deploy-preview:
    needs: test
    runs-on: ubuntu-latest
    if: >
      github.event_name == 'pull_request' &&
      github.event.pull_request.head.repo.full_name == github.repository
    steps:
      - uses: actions/checkout@v4

      - name: Install Vercel CLI
        run: npm i -g vercel@latest

      - name: Pull Vercel env (preview)
        run: >
          vercel pull --yes --environment=preview
          --org "$VERCEL_ORG_ID" --project "$VERCEL_PROJECT_ID"
          --token "${{ secrets.VERCEL_TOKEN }}"

      - name: Build with Vercel (creates .vercel/output)
        run: >
          vercel build
          --org "$VERCEL_ORG_ID" --project "$VERCEL_PROJECT_ID"
          --token "${{ secrets.VERCEL_TOKEN }}"

      - name: Deploy preview (prebuilt)
        run: >
          vercel deploy --prebuilt
          --org "$VERCEL_ORG_ID" --project "$VERCEL_PROJECT_ID"
          --token "${{ secrets.VERCEL_TOKEN }}"

  deploy-production:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

      - name: Install Vercel CLI
        run: npm i -g vercel@latest

      - name: Pull Vercel env (production)
        run: >
          vercel pull --yes --environment=production
          --org "$VERCEL_ORG_ID" --project "$VERCEL_PROJECT_ID"
          --token "${{ secrets.VERCEL_TOKEN }}"

      - name: Build with Vercel (prod)
        run: >
          vercel build --prod
          --org "$VERCEL_ORG_ID" --project "$VERCEL_PROJECT_ID"
          --token "${{ secrets.VERCEL_TOKEN }}"

      - name: Deploy production (prebuilt)
        run: >
          vercel deploy --prebuilt --prod
          --org "$VERCEL_ORG_ID" --project "$VERCEL_PROJECT_ID"
          --token "${{ secrets.VERCEL_TOKEN }}"